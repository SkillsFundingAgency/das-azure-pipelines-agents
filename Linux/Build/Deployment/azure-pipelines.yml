trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - "Linux/Build/Deployment"
    exclude:
      - "*"

pr:
  paths:
    include:
      - "Linux/Build/Deployment"

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/heads/DASD-9551_Verify_K8_Manifest_Apply
    endpoint: SFA
  pipelines:
  - pipeline: build
    source: das-azure-pipelines-agents-linux-build (Image Build)
    branch: DASD-9551_Test_Agents
    trigger:
      branches:
        - master

pool:
  vmImage: ubuntu-latest

variables:
- group: RELEASE das-azure-pipelines-agent
- group: Release Management Resources
- name: ContainerImageName
  value: azure-pipelines-build-agent-ubuntu-20
- name: ImageTag
  value: $(resources.pipeline.build.runName)

stages:
  - stage: DeployDev
    variables:
    - group: DEV Linux Build Agent
    - group: Dev Management Resources
    jobs:
    - job: DeployManifest
      displayName: DeployManifest
      steps:
        - template: /pipeline-templates/step/deploy.yml
          parameters:
            VerifyDeployment: true
            Directory: $(System.DefaultWorkingDirectory)/Linux/Build/Deployment
            AzureServiceConnection: SFA-DAS-DevTest-ARM
        - pwsh: |
            Start-Sleep -Seconds 120 # Do Better. This gives time for the old pods to remove themselves from the pool before AcceptanceTests.
          displayName: Sleep
  - stage: AcceptanceTests
    dependsOn: DeployDev
    jobs:
    - job: DotNetAcceptanceTests
      pool:
        name: DAS - Continuous Integration Beta
        demands:
          - Agent.OS -equals Linux
      displayName: RunTests
      strategy:
        matrix:
          DotNet3.1:
            FrameworkVersion: netcoreapp3.1
          DotNet6:
            FrameworkVersion: net6.0
      steps:
        - task: DotNetCoreCLI@2
          displayName: dotnet new webapi
          inputs:
            command: custom
            custom: 'new'
            arguments: 'webapi --framework $(FrameworkVersion)'
        - task: DotNetCoreCLI@2
          displayName: dotnet build
          inputs:
            command: build
  - stage: DeployProd
    dependsOn: AcceptanceTests
    condition: eq(variables['resources.pipeline.image-build.sourceBranch'], 'refs/heads/master')
    variables:
    - group: PROD Linux Build Agent
    - group: PROD Management Resources
    jobs:
    - job: DeployManifest
      displayName: DeployManifest
      steps:
        - template: /pipeline-templates/step/deploy.yml
          parameters:
            VerifyDeployment: true
            Directory: $(System.DefaultWorkingDirectory)/Linux/Build/Deployment
            AzureServiceConnection: SFA-DAS-DevTest-ARM

